restr = "eigen",
restr.fact = 80,
nstart = 50,
iter.max = 1000,
trace = 0
)
grid_search <- ctlcurves(
x = scale(Shape$conteo[-(23:36)], center = TRUE, scale = TRUE),
k = 1:6,
alpha = seq(0, 0.9, 0.7),
restr = "eigen",
restr.fact = 80,
nstart = 50,
iter.max = 1000,
trace = 0
)
plot(grid_search)
grid_search <- ctlcurves(
x = scale(Shape$conteo[-(23:36)], center = TRUE, scale = TRUE),
k = 1:6,
alpha = seq(0, 0.9, 0.0.1),
plot(gri)
grid_search <- ctlcurves(
x = scale(Shape$conteo[-(23:36)], center = TRUE, scale = TRUE),
k = 1:6,
alpha = seq(0, 0.9, 0,0.1),
restr = "eigen",
restr.fact = 80,
nstart = 50,
iter.max = 1000,
trace = 0
)
grid_search <- ctlcurves(
x = scale(Shape$conteo[-(23:36)], center = TRUE, scale = TRUE),
k = 1:6,
alpha = seq(0, 0.9, 0.05),
restr = "eigen",
restr.fact = 80,
nstart = 50,
iter.max = 1000,
trace = 0
)
grid_search <- ctlcurves(
x = scale(Shape$conteo[-(23:36)], center = TRUE, scale = TRUE),
k = 1:6,
alpha = seq(0, 0.9, 0.05),
restr = "eigen",
restr.fact = 50,
nstart = 50,
iter.max = 1000,
trace = 0
)
grid_search <- ctlcurves(
x = scale(Shape$conteo[-(23:36)], center = TRUE, scale = TRUE),
k = 1:6,
alpha = seq(0, 0.9, 0.05),
restr = "eigen",
restr.fact = 20,
nstart = 50,
iter.max = 1000,
trace = 0
)
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.1, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
S
B<-Shape %>%
ggplot(mapping = aes(fill = factor(Conglomerado))) +
geom_sf() +
scale_fill_manual(values = c('#EE9572','orange','gray', 'yellow')) +  # Set your desired fill colors here
theme_minimal() +
ggtitle('')
library(patchwork)
Mapa1|B
B<-Shape[-(23:36),] %>%
ggplot(mapping = aes(fill = factor(Conglomerado))) +
geom_sf() +
scale_fill_manual(values = c('#EE9572','orange','gray', 'yellow')) +  # Set your desired fill colors here
theme_minimal() +
ggtitle('')
library(patchwork)
Mapa1|B
Mapa1<-Shape[-(23:36),]  %>%
ggplot(mapping = aes(fill = conteo)) +xlab('')+ylab('')+
geom_sf() +geom_sf_text(aes(label = nombre), size = 2, color = "black", check_overlap = TRUE)+
theme_minimal()+ggtitle('')+ scale_fill_gradient(low = "yellow", high = "#CD3333")
library(tclust)
grid_search <- ctlcurves(
x = scale(Shape$conteo[-(23:36)], center = TRUE, scale = TRUE),
k = 1:6,
alpha = seq(0, 0.9, 0.05),
restr = "eigen",
restr.fact = 20,
nstart = 50,
iter.max = 1000,
trace = 0
)
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.1, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
S
B<-Shape[-(23:36),] %>%
ggplot(mapping = aes(fill = factor(Conglomerado))) +
geom_sf() +
scale_fill_manual(values = c('#EE9572','orange','gray', 'yellow')) +  # Set your desired fill colors here
theme_minimal() +
ggtitle('')
library(patchwork)
Mapa1|B
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.1, restr.fact = 80)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.4, restr.fact = 80)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.2, restr.fact = 80)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.1, restr.fact = 80)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.1, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=8, restr.fact = 50)
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.8, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.8, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.4, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (Shape$conteo[-(23:36)], k = 3, alpha=0.2, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.2, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.3, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.5, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
B<-Shape[-(23:36),] %>%
ggplot(mapping = aes(fill = factor(Conglomerado))) +
geom_sf() +
scale_fill_manual(values = c('#EE9572','gray',, 'yellow')) +  # Set your desired fill colors here
theme_minimal() +
ggtitle('')
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.5, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.1, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.05, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.01, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.05, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.09, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.1, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.15, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.15, restr.fact = 80)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.15, restr.fact = 80)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.15, restr.fact = 90)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.15, restr.fact = 70)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.15, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.1, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 2, alpha=0.1, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 2, alpha=0.5, restr.fact = 50)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.5, restr.fact = 20)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.9, restr.fact = 20)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.9, restr.fact = 20)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.9, restr.fact = 80)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=1, restr.fact = 80)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
clus <- tclust (scale(Shape$conteo[-(23:36)]), k = 3, alpha=0.06, restr.fact = 80)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~Shape$Conglomerado[-(23:36)])
cluster<-kmeans()scale(Shape$conteo[-(23:36)] ,k=4, nstart = 50,
cluster<-kmeans(scale(Shape$conteo[-(23:36)] ,k=4, nstart = 50,
cluster<-kmeans(scale(Shape$conteo[-(23:36)]) ,k=4, nstart = 50,
iter.max = 1000)
cluster<-kmeans(scale(Shape$conteo[-(23:36)]) ,k=4, nstart = 50,
cluster<-kmeans(scale(Shape$conteo[-(23:36)]) ,k=4, nstart = 50,
iter.max = 1000)
cluster<-kmeans(scale(Shape$conteo[-(23:36)]) ,center=4, nstart = 50,
iter.max = 1000)
cluster<-kmeans(scale(Shape$conteo[-(23:36)]) ,centers=4, nstart = 50,
iter.max = 1000)
boxplot(Shape$conteo[-(23:36)]~cluster$cluster[-(23:36)])
cluster<-kmeans(scale(Shape$conteo[-(23:36)]) ,centers=4, nstart = 100,
iter.max = 1000)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~cluster$cluster[-(23:36)])
cluster<-kmeans(scale(Shape$conteo[-(23:36)]) ,centers=3, nstart = 100,
iter.max = 1000)
Shape$Conglomerado[-(23:36)]<-clus$cluster
boxplot(Shape$conteo[-(23:36)]~cluster$cluster[-(23:36)])
KOptimo<-function(x){
Clust<-hclust(dist(x))
library(dendextend)
Cluste<-find_k(Clust)
print(plot(find_k(Clust),main='',pch=19))
return(Cluste$k)
}
KOptimo(Shape$conteo[-(23:36)])
KOptimo(Shape$conteo)
cluster<-kmeans(scale(Shape$conteo ,centers=4, nstart = 100,
cluster<-kmeans(scale(Shape$conteo) ,centers=4, nstart = 100,
iter.max = 1000)
cluster<-kmeans(scale(Shape$conteo) ,centers=4, nstart = 100,
KOptimo(scale(Shape$conteo))
cluster<-kmeans(scale(Shape$conteo[-(23:36)]) ,centers=3, nstart = 100,
iter.max = 1000)
cluster
Shape$Conglomerado[-(23:36)]<-cluster$cluster
B<-Shape[-(23:36),] %>%
ggplot(mapping = aes(fill = factor(Conglomerado))) +
geom_sf() +
scale_fill_manual(values = c('#EE9572','gray',, 'yellow')) +  # Set your desired fill colors here
theme_minimal() +
ggtitle('')
library(patchwork)
boxplot(Shape$conteo[-(23:36)]~cluster$cluster[-(23:36)])
B<-Shape[-(23:36),] %>%
ggplot(mapping = aes(fill = factor(Conglomerado))) +
geom_sf() +
scale_fill_manual(values = c('yellow','orange', 'red3')) +  # Set your desired fill colors here
theme_minimal() +
ggtitle('')
library(patchwork)
Mapa1|B
#Elaborado por Andrés Felipe Palomino y Jennyfer Portilla
# Cargar las bibliotecas necesarias
library(readxl)
library(easypackages)
library(visdat)
library(corrplot)
library(plotrix)
#Elaborado por Andrés Felipe Palomino y Jennyfer Portilla
# Cargar las bibliotecas necesarias
library(readxl)
library(cluster)
library(ade4)
library(factoextra)
library(FactoMineR)
library(tclust)
library(ggplot2)
library(reshape2)
library(patchwork)
library(raster)
library(sf)
library(dplyr)
library(caret)
# Cargar la base de datos desde un archivo Excel
Base_total <- read_excel("~/ProyectoDengue2/Base de datos/Base total.xlsx", sheet = "Datos050124")
# Análisis de clúster usando tclust
X <- data.frame(Base_total)
grid_search <- ctlcurves(
x = scale(X[, ncol(X)], center = TRUE, scale = TRUE),
k = 1:6,
alpha = seq(0, 0.9, 0.05),
restr = "eigen",
restr.fact = 70,
nstart = 50,
iter.max = 1000,
trace = 0
)
set.seed(10)
par(mfrow = c(1, 2))
plot(grid_search)
clus <- tclust(X$Incidencia_Dengue_2023_Tablero_INS, k = 2, alpha = 0, restr.fact = 80)
plot(clus, xlab = 'Incidencia')
# Crear un objeto espacial para Colombia
colombia_pais <- getData(name = "GADM", country = "COL", level = 1)
prueba <- st_as_sf(colombia_pais)
# Agregar información de clústeres y variables de interés
X = Base_total
X = data.frame(X)
rownames(X) = Base_total$Departamento
X = X[, -c(1, 10, 11)]
prueba$Cluster = clus$cluster
prueba$Incidencia = X$Incidencia_Dengue_2023_Tablero_INS
prueba$Convencional = kmeans(X$Incidencia_Dengue_2023_Tablero_INS, 2)$cluster
prueba$`T-Clust` <- ifelse(prueba$Cluster == 2, 'Alta incidencia', 'Baja Incidencia')
prueba$`K-Means` <- ifelse(prueba$Convencional == 1, 'Alta incidencia', 'Baja Incidencia')
# Crear gráficos de cajas (boxplots) comparando clústeres y k-means
Caja1 <- ggplot(prueba, aes(y = Incidencia, x = `T-Clust`, fill = `T-Clust`)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = c('#EE9572', 'ivory')) +
geom_jitter()
Caja2 <- ggplot(prueba, aes(y = Incidencia, x = `K-Means`, fill = `K-Means`)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = c('#EE9572', 'ivory')) +
geom_jitter()
Cajas <- Caja1 | Caja2
ggsave('Boxplot.png', Cajas, dpi = 300, width = 10, height = 10)
# Gráficos de distribución espacial
A <- prueba %>% ggplot(mapping = aes(fill = Incidencia)) +
geom_sf() +
scale_fill_gradient(low = "#FFF68F", high = "#EE9572") +
theme_minimal() +
ggtitle('')
B <- prueba %>% ggplot(mapping = aes(fill = `T-Clust`)) +
geom_sf() +
scale_fill_manual(values = c('#EE9572', '#FFF68F')) +
theme_minimal() +
ggtitle('')
C <- prueba %>% ggplot(mapping = aes(fill = `K-Means`)) +
geom_sf() +
scale_fill_manual(values = c('#EE9572', '#FFF68F')) +
theme_minimal() +
ggtitle('')
Caraterizacion <- (A | B | C)
# Gráfico de barras de incidencia por departamento
Departamentos <- data.frame(
Departamento = c("Amazonas", "Antioquia", "Arauca", "Atlántico", "Bolívar",
"Boyacá", "Caldas", "Caquetá", "Casanare", "Cauca", "Cesar",
"Chocó", "Córdoba", "Cundinamarca", "Guainía", "Guaviare",
"Huila", "La Guajira", "Magdalena", "Meta", "Nariño",
"Norte de Santander", "Putumayo", "Quindío", "Risaralda",
"San Andrés y Providencia", "Santander", "Sucre", "Tolima",
"Valle del Cauca", "Vaupés", "Vichada"),
Incidencia = c(2033.27, 106.87, 427.69, 177.15, 456.2451, 169.52, 50.18,
625.6, 361.65, 194.48, 378.14, 374.33, 232.64, 570.7, 200.83,
914.83, 524.29, 400.43, 458.21, 1494.67, 545.03, 321.63, 431.73,
92.86, 28.7, 263.77, 517.14, 454.58, 1079.84, 586.5058, 3024.79,
688.04)
)
Departamentos <- Departamentos[order(-Departamentos$Incidencia), ]
barras <- ggplot(Departamentos, aes(x = reorder(Departamento, Incidencia), y = Incidencia, fill = Incidencia)) +
geom_bar(stat = "identity") +
scale_fill_gradient(high = '#EE9572', low = '#FFF68F') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +
labs(title = "Incidencia de Dengue 2023 por Departamento",
x = "Departamento",
y = "Incidencia") +
coord_flip()
ggsave('Incidencia.jpg', barras, dpi = 100, width = 30, height = 40)
# Análisis de componentes principales (PCA)
names(X)
X <- X[, -c(2)]
# Función para detectar outliers multivariados
out.mult <- function(Datos) {
n = nrow(Datos)
p = ncol(Datos)
Distance = mahalanobis(Datos, center = colMeans(Datos), cov = cov(Datos))
Limit = qchisq(0.05, lower.tail = FALSE, df = p)
id.dist = which(Distance > Limit)
Score_LOF = DMwR2::lofactor(Datos, k = 5)
id.LOF <- order(Score_LOF, decreasing = TRUE)[1:ceiling(0.01 * n)]
windows()
par(mfrow = c(2, 1))
plot(Distance, pch = 20, ylim = c(0, max(Distance) * 1.2))
text(id.dist, Distance[id.dist], id.dist, col = "red", pos = 3, cex = 0.8)
abline(h = Limit, col = "red", lwd = 2, lty = 2)
plot(Score_LOF, pch = 20, ylim = c(0, max(Score_LOF) * 1.2))
text(id.LOF, Score_LOF[id.LOF], id.LOF, col = "red", pos = 3, cex = 0.8)
return(list(Out_dist = id.dist, Out_LOF = id.LOF))
}
out.mult(X[, -(ncol(X) - 1)])
# Realizar PCA
IndiceTodas <- PCA(X[, c(2, 3, 4, 5)], graph = FALSE)
Acp <- PCA(X[, -(ncol(X) - 1)], ind.sup = c(1, 14, 18, 31), graph = FALSE)
# Gráficos de componentes principales
PCA <- fviz_pca_var(Acp, alpha.var = 0.9, labelsize = 5, repel = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle('PCA Inicial')
PCA2 <- fviz_pca_var(IndiceTodas, alpha.var = 0.9, labelsize = 5, repel = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle('PCA Acceso a servicios básicos')
(PCA | PCA2)
# Normalizar y agregar información de índice a los datos
options(scipen = 999)
IndiceTodas <- (IndiceTodas$ind$coord[, 1] - min(IndiceTodas$ind$coord[, 1])) / (max(IndiceTodas$ind$coord[, 1]) - min((IndiceTodas$ind$coord[, 1]))) * 100
X <- X[, -c(2, 3, 4, 5)]
X$Acceso_Servicios <- IndiceTodas
# Detectar outliers multivariados
out.mult(X)
# Realizar PCA final
Acp <- PCA(X[, -(ncol(X) - 1)], ind.sup = c(1, 14, 18, 31), graph = FALSE)
PCA3 <- fviz_pca_var(Acp, alpha.var = 0.9, labelsize = 5, repel = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle('PCA Final')
# Mostrar gráficos de componentes principales
(PCA | PCA2 | PCA3)
fviz_pca_var(Acp, alpha.var = 0.9, axes = c(1, 3), labelsize = 5, repel = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Crear dataframe con información de componentes principales y clústeres
Factor <- Acp$ind$coord[, 1:3]
suplementarios <- predict(Acp, newdata = X[c(1, 14, 18, 31), ]) $coord[, 1:3]
Factor <- rbind(Factor, suplementarios)
Factor <- Factor[sort(rownames(Factor)), ]
Factor <- data.frame(Factor, Agrupación = prueba$`T-Clust`)
prueba$PCA <- Factor[, 1]
prueba$PCA2 <- Factor[, 2]
prueba$PCA3 <- Factor[, 3]
# Gráficos de contribuciones para cada componente principal
Contri1 <- fviz_contrib(Acp, axes = 1, 'var', fill = "#EE9572", color = 'black')
Contri2 <- fviz_contrib(Acp, axes = 2, 'var', fill = "#EE9572", color = 'black')
Contri3 <- fviz_contrib(Acp, axes = 3, 'var', fill = "#EE9572", color = 'black')
# Gráficos de distribución espacial con información de PCA
C <- prueba %>% ggplot(mapping = aes(fill = PCA)) +
geom_sf() +
geom_sf_text(aes(label = NAME_1), size = 1.85, color = "black", check_overlap = TRUE) +
scale_fill_gradient(low = "#FFF68F", high = "#EE9572") +
theme_minimal() +
ggtitle('')
D <- prueba %>% ggplot(mapping = aes(fill = PCA2)) +
geom_sf() +
geom_sf_text(aes(label = NAME_1), size = 1.85, color = "black", check_overlap = TRUE) +
scale_fill_gradient(low = "#FFF68F", high = "#EE9572") +
theme_minimal() +
ggtitle('')
E <- prueba %>% ggplot(mapping = aes(fill = PCA3)) +
geom_sf() + geom_sf_text(aes(label = NAME_1), size = 1.85, color = "black", check_overlap = TRUE) +
scale_fill_gradient(low = "#FFF68F", high = "#EE9572") +
theme_minimal() +
ggtitle(' ')
# Crear composiciones de gráficos
((Contri1 | C))
((C | Contri1 + ggtitle('Contribuciones PC1')))
((D | Contri2 + ggtitle('Contribuciones PC2')))
((E | Contri3 + ggtitle('Contribuciones PC3')))
# Crear composiciones de gráficos
((C | Contri1 + ggtitle('Contribuciones PC1')))
((D | Contri2 + ggtitle('Contribuciones PC2')))
((E | Contri3 + ggtitle('Contribuciones PC3')))
# Cargar la base de datos desde un archivo Excel
Base_total <- read_excel("Base total.xlsx", sheet = "Datos050124")
setwd("C:/Users/sebas/OneDrive/Escritorio/Caracterizaci-n-Incidencia-Dengue/Artículo Salud Pública/Bases de Datos/Base de datos")
# Cargar la base de datos desde un archivo Excel
Base_total <- read_excel("Base total.xlsx", sheet = "Datos050124")
#Elaborado por Andrés Felipe Palomino y Jennyfer Portilla
# Cargar las bibliotecas necesarias
library(readxl)
library(cluster)
library(ade4)
library(factoextra)
library(FactoMineR)
library(tclust)
library(ggplot2)
library(reshape2)
library(patchwork)
library(raster)
library(sf)
library(dplyr)
library(caret)
# Cargar la base de datos desde un archivo Excel
Base_total <- read_excel("Base total.xlsx", sheet = "Datos050124")
# Análisis de clúster usando tclust
X <- data.frame(Base_total)
grid_search <- ctlcurves(
x = scale(X[, ncol(X)], center = TRUE, scale = TRUE),
k = 1:6,
alpha = seq(0, 0.9, 0.05),
restr = "eigen",
restr.fact = 70,
nstart = 50,
iter.max = 1000,
trace = 0
)
set.seed(10)
par(mfrow = c(1, 2))
plot(grid_search)
clus <- tclust(X$Incidencia_Dengue_2023_Tablero_INS, k = 2, alpha = 0, restr.fact = 80)
plot(clus, xlab = 'Incidencia')
